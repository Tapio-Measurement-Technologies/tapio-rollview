name: Build Executable

on:
  push:
    tags:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.12']
        include:
          - os: ubuntu-latest
            platform: linux
            extension: ""
          - os: windows-latest
            platform: windows
            extension: ".exe"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: >
          pyinstaller
          --onefile
          --noconsole
          --add-data src/postprocessors/:postprocessors/
          --hidden-import pandas
          --icon src/assets/tapio_favicon.ico
          src/main.py

      - name: Rename executable
        run: >
          mv
          dist/main${{ matrix.extension }}
          dist/rollview-${{ github.ref_name }}-${{ matrix.platform }}${{ matrix.extension }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rollview-${{ github.ref_name }}-${{ matrix.platform }}${{ matrix.extension }}
          path: dist/rollview-${{ github.ref_name }}-${{ matrix.platform }}${{ matrix.extension }}

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Download Artifact (linux)
        uses: actions/download-artifact@v3
        with:
          name: rollview-${{ github.ref_name }}-linux
          path: dist/

      - name: Download Artifact (windows)
        uses: actions/download-artifact@v3
        with:
          name: rollview-${{ github.ref_name }}-windows.exe
          path: dist/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/rollview-${{ github.ref_name }}-linux
          asset_name: rollview-${{ github.ref_name }}-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/rollview-${{ github.ref_name }}-windows.exe
          asset_name: rollview-${{ github.ref_name }}-windows.exe
          asset_content_type: application/octet-stream
